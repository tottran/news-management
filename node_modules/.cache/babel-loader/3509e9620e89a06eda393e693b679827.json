{"ast":null,"code":"'use strict';\n\nvar urlUtils = require('./utils/url'),\n  eventUtils = require('./utils/event'),\n  JSON3 = require('json3'),\n  FacadeJS = require('./facade'),\n  InfoIframeReceiver = require('./info-iframe-receiver'),\n  iframeUtils = require('./utils/iframe'),\n  loc = require('./location');\nvar debug = function () {};\nif (process.env.NODE_ENV !== 'production') {\n  debug = require('debug')('sockjs-client:iframe-bootstrap');\n}\nmodule.exports = function (SockJS, availableTransports) {\n  var transportMap = {};\n  availableTransports.forEach(function (at) {\n    if (at.facadeTransport) {\n      transportMap[at.facadeTransport.transportName] = at.facadeTransport;\n    }\n  });\n\n  // hard-coded for the info iframe\n  // TODO see if we can make this more dynamic\n  transportMap[InfoIframeReceiver.transportName] = InfoIframeReceiver;\n  var parentOrigin;\n\n  /* eslint-disable camelcase */\n  SockJS.bootstrap_iframe = function () {\n    /* eslint-enable camelcase */\n    var facade;\n    iframeUtils.currentWindowId = loc.hash.slice(1);\n    var onMessage = function (e) {\n      if (e.source !== parent) {\n        return;\n      }\n      if (typeof parentOrigin === 'undefined') {\n        parentOrigin = e.origin;\n      }\n      if (e.origin !== parentOrigin) {\n        return;\n      }\n      var iframeMessage;\n      try {\n        iframeMessage = JSON3.parse(e.data);\n      } catch (ignored) {\n        debug('bad json', e.data);\n        return;\n      }\n      if (iframeMessage.windowId !== iframeUtils.currentWindowId) {\n        return;\n      }\n      switch (iframeMessage.type) {\n        case 's':\n          var p;\n          try {\n            p = JSON3.parse(iframeMessage.data);\n          } catch (ignored) {\n            debug('bad json', iframeMessage.data);\n            break;\n          }\n          var version = p[0];\n          var transport = p[1];\n          var transUrl = p[2];\n          var baseUrl = p[3];\n          debug(version, transport, transUrl, baseUrl);\n          // change this to semver logic\n          if (version !== SockJS.version) {\n            throw new Error('Incompatible SockJS! Main site uses:' + ' \"' + version + '\", the iframe:' + ' \"' + SockJS.version + '\".');\n          }\n          if (!urlUtils.isOriginEqual(transUrl, loc.href) || !urlUtils.isOriginEqual(baseUrl, loc.href)) {\n            throw new Error('Can\\'t connect to different domain from within an ' + 'iframe. (' + loc.href + ', ' + transUrl + ', ' + baseUrl + ')');\n          }\n          facade = new FacadeJS(new transportMap[transport](transUrl, baseUrl));\n          break;\n        case 'm':\n          facade._send(iframeMessage.data);\n          break;\n        case 'c':\n          if (facade) {\n            facade._close();\n          }\n          facade = null;\n          break;\n      }\n    };\n    eventUtils.attachEvent('message', onMessage);\n\n    // Start\n    iframeUtils.postMessage('s');\n  };\n};","map":{"version":3,"names":["urlUtils","require","eventUtils","JSON3","FacadeJS","InfoIframeReceiver","iframeUtils","loc","debug","process","env","NODE_ENV","module","exports","SockJS","availableTransports","transportMap","forEach","at","facadeTransport","transportName","parentOrigin","bootstrap_iframe","facade","currentWindowId","hash","slice","onMessage","e","source","parent","origin","iframeMessage","parse","data","ignored","windowId","type","p","version","transport","transUrl","baseUrl","Error","isOriginEqual","href","_send","_close","attachEvent","postMessage"],"sources":["/Users/tottran/Documents/Bitbucket/toithietkephp/node_modules/react-dev-utils/node_modules/sockjs-client/lib/iframe-bootstrap.js"],"sourcesContent":["'use strict';\n\nvar urlUtils = require('./utils/url')\n  , eventUtils = require('./utils/event')\n  , JSON3 = require('json3')\n  , FacadeJS = require('./facade')\n  , InfoIframeReceiver = require('./info-iframe-receiver')\n  , iframeUtils = require('./utils/iframe')\n  , loc = require('./location')\n  ;\n\nvar debug = function() {};\nif (process.env.NODE_ENV !== 'production') {\n  debug = require('debug')('sockjs-client:iframe-bootstrap');\n}\n\nmodule.exports = function(SockJS, availableTransports) {\n  var transportMap = {};\n  availableTransports.forEach(function(at) {\n    if (at.facadeTransport) {\n      transportMap[at.facadeTransport.transportName] = at.facadeTransport;\n    }\n  });\n\n  // hard-coded for the info iframe\n  // TODO see if we can make this more dynamic\n  transportMap[InfoIframeReceiver.transportName] = InfoIframeReceiver;\n  var parentOrigin;\n\n  /* eslint-disable camelcase */\n  SockJS.bootstrap_iframe = function() {\n    /* eslint-enable camelcase */\n    var facade;\n    iframeUtils.currentWindowId = loc.hash.slice(1);\n    var onMessage = function(e) {\n      if (e.source !== parent) {\n        return;\n      }\n      if (typeof parentOrigin === 'undefined') {\n        parentOrigin = e.origin;\n      }\n      if (e.origin !== parentOrigin) {\n        return;\n      }\n\n      var iframeMessage;\n      try {\n        iframeMessage = JSON3.parse(e.data);\n      } catch (ignored) {\n        debug('bad json', e.data);\n        return;\n      }\n\n      if (iframeMessage.windowId !== iframeUtils.currentWindowId) {\n        return;\n      }\n      switch (iframeMessage.type) {\n      case 's':\n        var p;\n        try {\n          p = JSON3.parse(iframeMessage.data);\n        } catch (ignored) {\n          debug('bad json', iframeMessage.data);\n          break;\n        }\n        var version = p[0];\n        var transport = p[1];\n        var transUrl = p[2];\n        var baseUrl = p[3];\n        debug(version, transport, transUrl, baseUrl);\n        // change this to semver logic\n        if (version !== SockJS.version) {\n          throw new Error('Incompatible SockJS! Main site uses:' +\n                    ' \"' + version + '\", the iframe:' +\n                    ' \"' + SockJS.version + '\".');\n        }\n\n        if (!urlUtils.isOriginEqual(transUrl, loc.href) ||\n            !urlUtils.isOriginEqual(baseUrl, loc.href)) {\n          throw new Error('Can\\'t connect to different domain from within an ' +\n                    'iframe. (' + loc.href + ', ' + transUrl + ', ' + baseUrl + ')');\n        }\n        facade = new FacadeJS(new transportMap[transport](transUrl, baseUrl));\n        break;\n      case 'm':\n        facade._send(iframeMessage.data);\n        break;\n      case 'c':\n        if (facade) {\n          facade._close();\n        }\n        facade = null;\n        break;\n      }\n    };\n\n    eventUtils.attachEvent('message', onMessage);\n\n    // Start\n    iframeUtils.postMessage('s');\n  };\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}